name: Build libjudy

on:
  push:

defaults:
  run:
    shell: cmd

jobs:
  build:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, x86]
        php: [8.3, 8.4]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute virtual inputs
        id: virtuals
        run: |
          set URL=https://raw.githubusercontent.com/winlibs/winlib-builder/refs/heads/master/scripts/compute-virtuals.ps1
          curl -L --fail --retry 5 --retry-delay 5 "%URL%" -o compute_virtuals.ps1
          powershell -File compute_virtuals.ps1 -version ${{ matrix.php }} -arch ${{ matrix.arch }}

      - name: Show computed virtuals
        run: |
          echo vs=${{ steps.virtuals.outputs.vs }}
          echo vsyear=${{ steps.virtuals.outputs.vsyear }}
          echo msts=${{ steps.virtuals.outputs.msts }}
          echo msarch=${{ steps.virtuals.outputs.msarch }}
          echo winsdk=${{ steps.virtuals.outputs.winsdk }}
          echo toolset=${{ steps.virtuals.outputs.toolset }}

      - name: Prepare directories
        run: |
          if not exist downloads mkdir downloads
          if not exist build mkdir build
          if not exist install mkdir install

      - name: Download Judy source tarball
        run: |
          set VER=1.0.5
          set URL=https://downloads.sourceforge.net/project/judy/judy/Judy-%VER%/Judy-%VER%.tar.gz
          echo Downloading %URL%
          curl -L --fail --retry 5 --retry-delay 5 "%URL%" -o "downloads\Judy-%VER%.tar.gz"

      - name: Extract source
        run: |
          set VER=1.0.5
          tar -xzf "downloads\Judy-%VER%.tar.gz" -C build
          if not exist "build\Judy-%VER%\src\build.bat" (
            echo FATAL: build\Judy-%VER%\src\build.bat not found. >&2
            dir /b build\Judy-%VER%\src
            exit /b 1
          )

      - name: Compute vcvarsall path
        id: vc
        run: |
          set "TOOLSET=${{ steps.virtuals.outputs.toolset }}"
          if not exist "%TOOLSET%" (
            echo FATAL: toolset path not found: %TOOLSET% >&2
            exit /b 1
          )
          for %%I in ("%TOOLSET%..\\..\\Auxiliary\\Build\\vcvarsall.bat") do set "VCVARS=%%~fI"
          if not exist "%VCVARS%" (
            echo FATAL: vcvarsall.bat not found near toolset: %VCVARS% >&2
            exit /b 1
          )
          echo vcvars=%VCVARS%>> %GITHUB_OUTPUT%

      - name: Build libjudy (MSVC)
        run: |
          setlocal EnableExtensions EnableDelayedExpansion
          set VER=1.0.5

          rem Map to vcvars arch from matrix arch
          set VCVARS_ARCH=${{ matrix.arch }}
          if /I "%VCVARS_ARCH%"=="x64" set VCVARS_ARCH=amd64
          if /I "%VCVARS_ARCH%"=="x86" set VCVARS_ARCH=x86

          call "${{ steps.vc.outputs.vcvars }}" %VCVARS_ARCH%
          if errorlevel 1 exit /b 1

          cd /d "build\Judy-%VER%\src"
          call build.bat
          if errorlevel 1 exit /b 1

          rem Basic sanity
          if not exist Judy.lib (
            echo FATAL: Judy.lib not produced. >&2
            dir /b
            exit /b 1
          )

      - name: Install headers and libraries
        run: |
          set VER=1.0.5
          set PREFIX=%CD%\install

          if not exist "%PREFIX%\include" mkdir "%PREFIX%\include"
          if not exist "%PREFIX%\lib" mkdir "%PREFIX%\lib"
          if not exist "%PREFIX%\bin" mkdir "%PREFIX%\bin"

          copy /Y "build\Judy-%VER%\src\Judy.h" "%PREFIX%\include\Judy.h" >nul
          copy /Y "build\Judy-%VER%\src\Judy.lib" "%PREFIX%\lib\Judy.lib" >nul
          if exist "build\Judy-%VER%\src\Judy.dll" copy /Y "build\Judy-%VER%\src\Judy.dll" "%PREFIX%\bin\Judy.dll" >nul
          if exist "build\Judy-%VER%\COPYING" copy /Y "build\Judy-%VER%\COPYING" "%PREFIX%\LICENSE" >nul

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libjudy-1.0.5-${{steps.virtuals.outputs.vs}}-${{matrix.arch}}
          path: install
