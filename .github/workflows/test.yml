name: Build rabbitmq-c
on:
  push:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            generator: "Visual Studio 16 2019"
            arch: x64
            archName: Win64
            toolset: v141
            label: vc15
          - os: windows-2019
            generator: "Visual Studio 16 2019"
            arch: x64
            archName: Win64
            toolset: v142
            label: vs16
          - os: windows-2022
            generator: "Visual Studio 17 2022"
            arch: x64
            archName: Win64
            toolset: v143
            label: vs17
          - os: windows-2019
            generator: "Visual Studio 16 2019"
            arch: Win32
            archName: Win32
            toolset: v141
            label: vc15
          - os: windows-2019
            generator: "Visual Studio 16 2019"
            arch: Win32
            archName: Win32
            toolset: v142
            label: vs16
          - os: windows-2022
            generator: "Visual Studio 17 2022"
            arch: Win32
            archName: Win32
            toolset: v143
            label: vs17
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: alanxz/rabbitmq-c
          ref: v0.15.0

      - name: Install OpenSSL (x64 or Win32)
        run: |
          #$ver = (choco search openssl --exact --limit-output).split('|')[1]
          #$verUnd = $ver -replace '\.', '_'
          #$archName = '${{ matrix.archName }}'
          #Start-BitsTransfer -Source "https://slproweb.com/download/${archName}OpenSSL-$verUnd.exe" -Destination openssl-installer.exe
          #Start-Process -FilePath openssl-installer.exe -ArgumentList '/SP-','/VERYSILENT','/NORESTART',"/DIR=C:\OpenSSL-$archName" -NoNewWindow -Wait
          if('${{ matrix.arch }}' -eq 'x64') {
            choco install openssl --version=1.1.1.2100 -y -f --install-arguments="'/DIR=C:\OpenSSL-${{ matrix.archName }}'"
          } else {
            choco install openssl --version=1.1.1.2100 -y -f -x86 --install-arguments="'/DIR=C:\OpenSSL-${{ matrix.archName }}'"
          }

      - name: Configure with CMake
        run: |
          $opensslRoot = 'C:\OpenSSL-${{ matrix.archName }}'
          mkdir build
          cd build
          cmake .. `
            -G "${{ matrix.generator }}" `
            -A ${{ matrix.arch }} `
            -T "${{ matrix.toolset }}" `
            -DCMAKE_C_FLAGS=" /W4" `
            -DOPENSSL_ROOT_DIR="$opensslRoot" `
            -DOPENSSL_INCLUDE_DIR="$opensslRoot\include" `
            -DCMAKE_BUILD_TYPE=Debug `
            -DBUILD_SHARED_LIBS=ON `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/build/install"

      - name: Build & install
        run: cmake --build build --config Release --target install

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: rabbitmq-c-${{ matrix.label }}-${{ matrix.arch }}
          path: ${{github.workspace}}/build/install
